# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get paths
      run: |
        git show --pretty="" --name-only ${{ github.sha }} > PATHS_TO_CHANGED_FILES.txt
    - uses: ponicode/docstrings-action@master
      with:
        repo_path: ./
        auth_token: ${{ secrets.PONICODE_TOKEN }}
        all_repo: True
      # Creates pull request with all changes in file
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "[ponicode-pull-request] Ponicode wrote new docstrings!"
        branch: ponicode-docstring
        title: "[Ponicode] Docstrings created"
        body: |
          ## ‚≠êÔ∏è Ponicode report ‚≠êÔ∏è
          Ponicode found **undocumented functions** in your code, and auto-generated docstrings for you.
          </br>
          ### ü¶Ñ We'd love to hear your feedback!ü¶Ñ 
          Send us an email at <feedback@ponicode.com>, open an issue on our Action, or join us on the [Ponicode Community Slack](https://ponicode-community.slack.com/join/shared_invite/zt-fiq4fhkg-DE~a_FkJ7xtiZxW7efyA4Q#/).
          Visit **[ponicode.com](https://ponicode.com)** to find out more about what we do.
          </br>
          <img alt="Ponicode Logo" src="https://avatars0.githubusercontent.com/u/49948625?s=200&v=4=200zx" width="100"/>

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Generate Python Docs
      uses: jbheard/markdown-docs@v1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pdoc3
        pip install -r requirements.txt;
        

    # - name: auto pdoc
    #   env: 
    #     HOST_MONGO_DB: ${{ secrets.HOST_MONGO_DB }}
    #     PASSWORD_MONGO_DB: ${{ secrets.PASSWORD_MONGO_DB }}
    #     SERVER_MONGO_DB: ${{ secrets.SERVER_MONGO_DB }}
    #     SECRET_KEY: ${{ secrets.SECRET_KEY }}
    #     DATABASE_SQL: ${{ secrets.DATABASE_SQL }}

    # - name: Test with pytest
    #   env: 
    #     HOST_MONGO_DB: ${{ secrets.HOST_MONGO_DB }}
    #     PASSWORD_MONGO_DB: ${{ secrets.PASSWORD_MONGO_DB }}
    #     SERVER_MONGO_DB: ${{ secrets.SERVER_MONGO_DB }}
    #     SECRET_KEY: ${{ secrets.SECRET_KEY}}
    #     DATABASE_SQL: ${{ secrets.DATABASE_SQL }}
    #   run: |
    #     pytest tests
    - run: |
        git fetch --prune --unshallow

    - name: Deploy to heroku
      env:
        HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      if: github.ref == 'refs/heads/main' && job.status == 'success'
      run: |
        git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git
        git push heroku main -f

    - name: Commit files
      run: |
        echo ${{ github.ref }}
        git add .
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -m "CI: Automated build push" -a | exit 0
    - name: Push changes
      if: github.ref == 'refs/heads/main'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
